<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Let's open source!</title>
 <link href="http://wantingchen.github.io/atom.xml" rel="self"/>
 <link href="http://wantingchen.github.io/"/>
 <updated>2016-06-28T18:20:40+02:00</updated>
 <id>http://wantingchen.github.io</id>
 <author>
   <name>Wan-Ting CHEN</name>
   <email>wanting@gmail.com</email>
 </author>

 
 <entry>
   <title>Construire un quadrirotor avec Raspberry Pi (3) -- Artistic Style</title>
   <link href="http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/06/28/Drone_3.html"/>
   <updated>2016-06-28T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/06/28/Drone_3</id>
   <content type="html">&lt;h3 id=&quot;pourquoi-faut-il-avoir-un-certain-style-de-programmation-&quot;&gt;Pourquoi faut-il avoir un certain style de programmation ?&lt;/h3&gt;

&lt;p&gt;Quand on fait la programmation, on doit collaborer avec au moins avec deux personnes:
soi-même auparavant et à l’avenir.
Beaucoup de programmateurs ont de l’expérience comme ça:
on ne comprend plus rien ce que on a fait si on ne touche pas les code source pendant plus que un mois.
Em outre, si votre code source est déjà assez difficile pour vous-même à l’avenir de comprendre,
ça deviendra plus compliqué de ajouter des autre collaborateurs pour réutiliser, modifier ou améliorer votre code.&lt;/p&gt;

&lt;p&gt;Ainsi, c’est plus efficace de définer certains règles or spécifications de codage afin d’aider à lire et comprendre les code source,
dont facilite la communication parmi les programmateurs et éviter des bugs davantage.
Avec un propre style de programmation, on peut assurer la qualité de code et aussi limiter sa complexité et taille.&lt;/p&gt;

&lt;h3 id=&quot;util-pour-bien-contrler-le-format-de-code--astyle&quot;&gt;Util pour bien contrôler le format de code : astyle&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://astyle.sourceforge.net/&quot;&gt;Artistic Style&lt;/a&gt;
est un util qui peut formatter, embellir, et ajuster l’indentation le code source de
C, C ++, C ++ / CLI, Objective-C, C# et Java langages de programmation.
Il est un programme de console qui reçoit l’information de ligne de commande, comme ça:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;astyle  [OPTIONS]  SourceFile1  SourceFile2  SourceFile3  [ . . . ]&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Dans [OPTION] on peut mettre plus que une option. Par exemple, pour formatter un fichier:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;astyle  --style=allman  /home/user/project/foo.cpp&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Pour plusiers fichiers:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;astyle  --style=allman --recursive  /home/user/project/*.cpp  /home/user/project/*.h&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://rfc.zeromq.org/spec:21/CLASS/&quot;&gt;C Language Style for Scalability&lt;/a&gt;: Code Style&lt;/p&gt;

&lt;p&gt;Indentation&lt;/p&gt;

&lt;p&gt;Indentation SHALL be 4 spaces per level. Tab characters SHALL NOT be used in code.
Declarations&lt;/p&gt;

&lt;p&gt;Functions SHALL be prototyped as follows:&lt;/p&gt;

&lt;type&gt;
    &lt;name&gt; (&lt;arguments&gt;);

Functions SHALL be defined as follows:

&lt;type&gt;
&lt;name&gt; (&lt;arguments&gt;)
{
    &lt;body&gt;
}

When the project uses C99, stack variables SHALL be defined in-line, as close as possible to their first use, and initialized. For example:

myp_myclass_t *myclass = myp_myclass_new ();
char *comma = strchr (surname, &#39;.&#39;);

When the project uses C89, stack variables SHALL all be defined and initialized at the start of the function or method where they are used.

    Variables and functions SHALL use lower-case names.

    Where necessary, underlines SHALL be used to separate parts of a name.

    Variable names like i and temp that carry no information SHALL NOT be used.

Statements

Code lines of more than 80-100 characters SHOULD be folded for readability.

Single-statement blocks SHALL NOT be enclosed in brackets.

This is the form of a single-statement block:

if (comma == NULL)
    comma = surname;

In else statements, the else SHALL be put on a line by itself.

Multiple if/else tests SHALL be stacked vertically to indicate that the order is arbitrary.

This is the form of a stacked if statement block:

if (command == CMD_HELLO)
    puts (&quot;hello&quot;);
else
if (command == CMD_GOODBYE)
    puts (&quot;goodbye&quot;);
else
if (command == CMD_ERROR)
    puts (&quot;error&quot;);

With multi-statement conditional blocks, the closing bracket SHALL be put on a line by itself, aligned with the opening keyword.

This is the form of a stacked if statement block with brackets around each conditional block:

if (command == CMD_HELLO) {
    puts (&quot;hello&quot;);
    myp_peer_reply (peer, CMD_GOODBYE);
}
else
if (command == CMD_GOODBYE) {
    puts (&quot;goodbye&quot;);
    myp_peer_reply (peer, CMD_DISCONNECT);
}
else
if (command == CMD_ERROR) {
    puts (&quot;error&quot;);
    myp_peer_close (peer);
}

This is the form of a while statement:

char *comma = strchr (surname, &#39;,&#39;);
while (comma) {
    *comma = &#39; &#39;;
    comma = strchr (surname, &#39;,&#39;);
}

Comments

Comments on code SHALL be used lightly and where necessary.

In C99 projects the syntax for comments is:

    In-line comments SHALL use the C++ // style.

    Multi-line comments MAY use the C / ... / style or MAY use the C++ style.

In C89 projects the syntax for all comments SHALL be the C / ... / style.

    When possible in-line comments shall start at column 33.

    In in-line comments, the // or /* shall be followed by two spaces.

    Every function shall have a multi-line comment header that briefly explains its purpose.
    Method comment headers SHALL be preceded by a line of hyphens ending at column 78.
    Suitably-marked-up comments before a function MAY be used as source material for reference documentation.

This is the general template for a method comment header:

//  --------------------------------------------------------------------------
//  Finds the first item in the list, returns null if the list is empty.

myp_myclass_t *
myp_myclass_first (myp_myclass_t *self)
{
    ...

    Every property in a class structure SHALL have a 1-line in-line comment that describes its purpose.
    Comments SHALL NOT be used to compensate for illegible code.
    Code that cannot be reasonable read and understood by the casual reader SHOULD be rewritten, not annotated.
    Properties and functions whose semantics are not clear from their names SHOULD be renamed, not annotated.

Blank Lines

Blank lines SHALL be used to separate blocks of code to improve readability, in these cases:

    After the closing bracket of a function body and before the comment header for a function.
    To break up blocks of code that exceed 6-8 lines.
    After assertions at the start of a class body.
    After an if statement with a single-statement block.
    After multi-line case blocks inside a switch statement.
    After multi-line comment blocks.

Blank lines SHALL not be used in these cases:

    After the closing bracket of a conditional block.
    To separate individual lines of code that could better be grouped together.

Vertical Alignment

Code SHALL NOT use extra spacing to create vertical alignment.

char *comma = strchr (surname, &#39;,&#39;);
while (comma) {
    *comma = &#39; &#39;;
    comma = strchr (surname, &#39;,&#39;);
}

Punctuation

Punctuation SHALL follow English rules as far as possible.

This is the style for unary operators, with a space after but not before the operator:

char_nbr++;

This is the style for binary operators, with a space before and after the operator:

comma = comma + 1;

This is the style for the ?: operator:

comma = comma? comma + 1: strchr (name, &#39;.&#39;);

This is the style for semi-colons, with a space after but not before:

for (char_nbr = 0; *char_nbr; char_nbr++)
    char_nbr++;

This is the style for parentheses, with a space before the opening, and after the closing parenthesis, with multiple opening or closing parentheses joined together without spaces:

node = (node_t *) zmalloc (sizeof (node_t));
if (!node)
    return -1;

This is the style for square brackets:

comma = name [char_nbr];

This is the style for pointer dereferences, with no space before or after the &#39;-&amp;gt;&#39;:

self-&amp;gt;name = strdup (name);

Assertions

Classes SHOULD check the validity of arguments using assertions. That is, misuse of the API is considered a programming error, not a run-time error.

    Assertions SHALL be used for their documentary value, for example to warn the reader, &quot;this argument SHALL NOT be null&quot;.

    Assertions on arguments SHALL come at the start of the class body and SHALL follow the order of the arguments.

    Assertions MAY be used on return values from function calls if such failures cannot safely be handled by the code.

    Assertions MAY be used on internal state (e.g., instance properties) to assert a mandatory condition for continuing.

    Assertions SHALL NOT be used to trap errors on external conditions, e.g., bad user input, invalid protocol messages, etc.

    Assertions SHOULD be used to trap errors on internal APIs, e.g. invalid messages sent from one thread to another.

    Assertions SHALL NOT have side-effects since the entire statement may be removed by an optimizing compiler.

Exiting Functions and Goto Statements

The return statement MAY be used at any point in a function to return to the caller.

If the function needs to do clean-up (e.g., free a number of properties), the code MAY use goto and a single clean-up block at the end of the function. Such a clean-up block SHALL follow the last &quot;normal&quot; return.

A void function SHALL NOT end in an empty return statement.
Recommended Patterns

    The recommended pattern for an open-ended loop is while (true) {}, with break statements as needed to exit the loop.

    The recommended pattern for array iteration is:

for (array_index = 0; array_index &amp;lt; array_size; array_index++) {
    //  Access element [array_index]
}

    The recommended pattern for list iteration is:

myp_myclass_t *myclass = (myp_myclass_t *) myp_myclass_first (myclass);
while (myclass) {
    //  Do something
    myclass = (myp_myclass_t *) myp_myclass_next (myclass);
}

&lt;/body&gt;&lt;/arguments&gt;&lt;/name&gt;&lt;/type&gt;&lt;/arguments&gt;&lt;/name&gt;&lt;/type&gt;
</content>
 </entry>
 
 <entry>
   <title>Comment fonctionne une base de données</title>
   <link href="http://wantingchen.github.io/algorithm/2016/06/20/Base_de_donnees.html"/>
   <updated>2016-06-20T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/algorithm/2016/06/20/Base_de_donnees</id>
   <content type="html">&lt;h3 id=&quot;normalement-cest-ce-que-les-gens-pensent&quot;&gt;Normalement, c’est ce que les gens pensent&lt;/h3&gt;

&lt;h3 id=&quot;rfrence&quot;&gt;Référence&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://coding-geek.com/how-databases-work/&quot;&gt;How does a relational database work &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/100349/&quot;&gt;如果有人问你数据库的原理，叫他看这篇文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Coursera: Algorithm Design Analysis (1) -- Diviser pour régner (Divide & conquer)</title>
   <link href="http://wantingchen.github.io/algorithm/2016/06/17/Coursera_Algorithm_01.html"/>
   <updated>2016-06-17T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/algorithm/2016/06/17/Coursera_Algorithm_01</id>
   <content type="html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;h3 id=&quot;algorithme-de-karatsuba&quot;&gt;Algorithme de Karatsuba&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;(a × 10^k + b)(c × 10^k + d) = ac × 10^{2k} + (ac + bd – (a – b)(c – d)) × 10^k + bd&lt;/script&gt;

&lt;p&gt;Recursion:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;T(n) = 3T(n/2) + cn + d&lt;/script&gt;

&lt;p&gt;Complexité : &lt;script type=&quot;math/tex&quot;&gt;n^(log_23)&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;tri-fusion&quot;&gt;Tri fusion&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Karatsuba_algorithm&quot;&gt;Karatsuba algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Construire un quadrirotor avec Raspberry Pi (2)</title>
   <link href="http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/05/10/Drone_2.html"/>
   <updated>2016-05-10T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/05/10/Drone_2</id>
   <content type="html">&lt;p&gt;La programmation et les spécifications :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le code est écrit en C, en exploitant les nouveautés couverts pas le standard C99. 
gcc 4.9 est utilisé.&lt;/li&gt;
  &lt;li&gt;Utiliser pthreads (POSIX) pour la programmation multithreading, puis &lt;a href=&quot;https://gcc.gnu.org/wiki/C11Status&quot;&gt;gcc&lt;/a&gt; 
et clang ne supporte pas encore C11 Thread (c’est à cause de glibc).&lt;/li&gt;
  &lt;li&gt;Le programme doit marcher sur RPi modèle B+ et aussi sur RPi2 modèle B (peut-être aussi RPi3 modèle B, j’espère).&lt;/li&gt;
  &lt;li&gt;Le programme peut se faire exécuter à la fin de la procédure de démarrage.
Davantage, le système peut exécuter le programme s’il est arrêté à cause de certaines raisons.
C’est-à-dire, on doit préparer un script shell qui peut être exécuté par /etc/rc.local 
afin de lancer ce programme et surveiller s’il est encore en cours.&lt;/li&gt;
  &lt;li&gt;Il faut enregistrer toutes les données nécessaires, 
y compris celles recueillies par les capteurs et celles calculées pas le programme,
dans un fichier log dont le nom contient l’instant (date,heure,etc.) du démarrage du programme.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cmake.org/&quot;&gt;CMake&lt;/a&gt; est utilisé pour générer le fichier Makefile&lt;/li&gt;
  &lt;li&gt;Suivre les principes indiqués par &lt;a href=&quot;https://matt.sh/howto-c&quot;&gt;How to C in 2016&lt;/a&gt;, 
et le style de code fait référence à &lt;a href=&quot;http://zeromq.org/docs:style&quot;&gt;21/CLASS - C Language Style for Scalability &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Utiliser &lt;a href=&quot;http://www.stack.nl/~dimitri/doxygen/index.html&quot;&gt;Doxygen&lt;/a&gt; 
pour générer la documentation du code source.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Traduction : Un protocole pour le décès (A Protocol for Dying), par Pieter Hintjens</title>
   <link href="http://wantingchen.github.io/vie/2016/04/24/Protocol_for_Dying.html"/>
   <updated>2016-04-24T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/vie/2016/04/24/Protocol_for_Dying</id>
   <content type="html">&lt;p&gt;L’original de cet article est ici : &lt;a href=&quot;http://hintjens.com/blog:115&quot;&gt;A Protocol for Dying&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pieter_Hintjens&quot;&gt;Pieter Hintjens&lt;/a&gt; est écrivain, programmeur et penseur,
qui a dépensé des décennies à construire de grands systèmes logiciels et des communautés en-ligne,
qu’il décrit comme des “système vivant”.
Il est un expert du calcul distribué, 
et il a rédigé plus que 30 protocoles et système distribué.
Il a conçu AMQP en 2004, et il a fondé le projet de logiciel libre ZeroMQ en 2007.
Il est l’auteur de “ZeroMQ - Messaging for Many Applications” (O’Reilly), 
“Culture and Empire: Digital Revolution”, et “The Psychopath Code”.
En avril 2016, il a été diagnostiqué de métastase terminale d’un cancer précédent.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span style=&quot;color: blue&quot;&gt; Rédigé par Pieter Hintjens à 11h43, 22 avril, 2016.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Voici mon dernier article. Peut-être je pourrais écrire plus, 
si j’ai encore le temps après.
Je concentrerai mon attention à la position la plus agréable au lit, 
la planification du traitement contre la douleur,
et les gens autour de moi.&lt;/p&gt;

&lt;p&gt;Hier j’ai eu douze visiteurs, y compris mes jeunes enfants aimables.
On peut imaginer que c’est fatigant, 
mais l’interminable flux des amis et de la famille était comme être dans un confortable bain chaud alimenté en eau fraîche sans cesse.&lt;/p&gt;

&lt;p&gt;J’étais un homme isolé et solitaire, et peut-être un peu autiste.
Je pensais seulement au travail, à la natation, à mes chats.
La notion que les gens inconnus à moi pouvaient prendre plaisir de ma compagnie était étrange pour moi.
Au moins mes œuvres, je trouvais, avaient la valeur.
Nous avons composé des générateurs de code en Cobol.
J’ai fait un éditeur de code que le personnel aimait bien, parce qu’il marchait gracieusement et pouvait exécuter partout.
J’ai fait de l’auto apprentissage en C et assembleur 8086 et j’ai composé des outils shareware dans les années 1990.&lt;/p&gt;

&lt;p&gt;Au fil du temps j’ai appris que si on noue une petite conversation avec un inconnu,
la réponse vient avec un rayon de plaisir.
Petit à petit, ceci devenait ma drogue de choix,
comme une addiction graduelle au café.&lt;/p&gt;

&lt;p&gt;Finalement ça était devenu la base et alors la cible de mon travail:
aller aux endroits étranges et rencontrer les gens inconnus.
J’aime bien les conférences parce qu’on n’a pas besoin d’excuse.
Tout le monde veut et espère parler.
Rarement je parle des sujets techniques.
On peut simplement lire le code si on veut.&lt;/p&gt;

&lt;p&gt;Ainsi, je suis fier de mon œuvre réel, qui a été, pendant des décennies, 
de parler, d’écouter et d’échanger des connaissances avec les gens,
et alors synthétiser tout ceci et puis partager avec les autres.
Des milliers de conversations se sont ainsi faites à travers de l’Europe, de l’Amérique, de l’Afrique et de l’Asie.
Et je peux gagner toutes les louanges que les gens crédible me donnent, comme créatif ou brillant, etc.
Toutefois, les modèles et les théories que j’ai adaptés et documentés, 
sont toujours issues de l’expérience quotidienne avec d’autre gens.&lt;/p&gt;

&lt;p&gt;Merci beaucoup pour tout ça, mes amis.
Quand je dis “je vous aime”, ce n’est pas seulement un geste.
Vous m’avez littéralement alimenté professionnellement et intellectuellement.&lt;/p&gt;

&lt;p&gt;Donc je voulais documenter un dernier modèle, 
qui est comment faire face au décès,
étant donné quelques connaissances d’avance.
Cette fois-ci je ne vais pas écrire un RFC (demande de commentaires). :)&lt;/p&gt;

&lt;h3 id=&quot;comment-cela-sest-pass&quot;&gt;Comment cela s’est passé&lt;/h3&gt;

&lt;p&gt;Techniquement, j’ai un cancer métastasé des voies biliaires dans les deux poumons.
Depuis février j’ai eu la toux sèche, la fatigue augmentée et la perte de concentration au travail.
En mars, mon père est décédé et nous nous sommes dépêchés de l’arranger.
Je toussais encore tous le temps.
Le 8 avril je suis allé chez mon oncologue et je lui ai dit que je n’allais pas bien. 
Elle a ordonné un CAT-scan urgent et des analyses de sang.&lt;/p&gt;

&lt;p&gt;Le 13 avril, une bronchoscopie horrible et des biopsies.
Et puis le 15 avril, un TEP-scan.
Pour le 16 avril, il avait été prévu que je conduise à Eindhoven pour y donner un keynote à NextBuild.
Au contraire, je suis allé aux urgences à cause de la douleur explosive du côté des biopsies.
Je me suis enregistré et j’ai été donné des antibiotiques, qui réduit la douleur.
Et puis le 18 avril, mon oncologue a confirmé que c’est du cancer.
Je suis encore ici, et mes médecins réfléchissent quelle chimio je peux essayer.
C’est un cancer rare en Europe, avec peu de données solides.&lt;/p&gt;

&lt;p&gt;Tous ce que nous comprenons est, cholangiocarcinoma ne répond pas bien à la chimiothérapie.
De plus, mon cancer est agressif et envahit vite.
Ensuite, j’ai déjà des clusters ailleurs dans mon corps.
Tout ceci, ce sont des données solides.&lt;/p&gt;

&lt;p&gt;Ce jour-là, je l’ai dit au monde, et alors j’ai préparé le décès.&lt;/p&gt;

&lt;h3 id=&quot;sadresser--une-personne-qui-va-mourir&quot;&gt;S’adresser à une personne qui va mourir&lt;/h3&gt;

&lt;p&gt;Il peut s’avérer très étrange de parler une personne mourante (on la nomme “Bob”).
Voici les choses principales que l’autre personne (on l’appelle “Alice”) ne devrait pas dire à Bob :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;“Accroche-toi! Il faut avoir de l’espoir! Tu dois lutter!”&lt;/strong&gt;
Il est prudent d’assumer que Bob lutte contre la maladie aussi durement que possible.
Si non, c’est le choix de Bob entièrement.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“C’est tellement tragique. Je suis si triste. Ne meurs pas s’il te plaît!”&lt;/strong&gt;
C’est ce que ma fille m’a dit une fois.
J’ai expliqué doucement qu’on ne peut jamais lutter contre la réalité.
La mort n’est pas une option.
Être fâché ou triste en face des faits, c’est du gaspillage de temps.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“Tu peux vaincre ceci! On ne sait jamais!”&lt;/strong&gt;
C’est ce qu’Alice fait afin de exprimer son espoir.
L’espoir faux n’est pas un médicament réel,
contrairement à un produit efficace de chimiothérapie, ou un anti-douleur calmant.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“Il y a cette guérison alternative dont les gent parlent.”&lt;/strong&gt;
De telles remarques, dont j’ai eu seulement peu, heureusement, méritent un coup de marteau.
Même s’il y a une guérison miraculeuse, 
le coût et le stress (aux autres) de la chercher est un acte tellement égoïste et disproportionné,
avec une probabilité de réussite comparable à celle de la loterie.
On vit, et on meurt.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“Lis ce chapitre de la Bible, ça t’aidera.”&lt;/strong&gt;
C’est très rude, offensant, maladroit et aussi arrogant.
Si Bob veut des conseils religieux, il parlera à son prêtre.
Dans le cas contraire: territoire interdit!
C’est une autre offense qui encourt mon marteau.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;S’engager à questionner hésitant est comme un harcèlement passif.&lt;/strong&gt; Par exemple,
demander à Bob de répondre à maintes reprises des petites choses comme “je t’ai réveillé?”
Probablement, Bob n’a pas l’état d’esprit pour un bavardage.
Il a envie d’avoir les gens qui restent près de lui physiquement, ou parlent des choses intéressantes (vois ci-dessous).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En outre, ne pleure pas au téléphone quand tu l’appelles.
Si tu sens que tu vas pleurer, raccroche le téléphone et attends pendant 10 minutes, puis rappelle-le.
Les larmes ne sont pas le problème.
Pourtant, la menace d’auto-apitoiement peut pousser Bob vers l’obscur.
J’ai appris à maîtriser mon émotion mais souvent Bob est vulnérable.&lt;/p&gt;

&lt;p&gt;Voici les choses qu’Alice peut évoquer pour rendre Bob heureux.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Les histoires de veilles aventures qu’ils ont partagées.&lt;/strong&gt;
Tu le te rappelles encore? Ah oui, je me rappelle… Comme c’était bien!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Les détails cliniques.&lt;/strong&gt; 
Bob, qui est fixé au lit tout le temps, est probablement obsédé par le rituel des soins, 
le personnel, les médicaments, et surtout, sa maladie.
Plus bas, je discuterai les obligations de Bob concernant le partage de tout ceci.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Aide Bob avec les détails techniques.&lt;/strong&gt;
Arranger toutes les choses de la vie est très compliqué et on a besoin de beaucoup de mains et cerveaux.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“J’ai acheté ton livre.”&lt;/strong&gt;
dans l’hypothèse que Bob est un écrivain comme moi.
Peut-être c’est de la flatterie, ou sincère, de toute façon ça va faire Bob sourire.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Avant tout, évite toute émotion autre que le bonheur, 
ne lui présente pas de problèmes additionnels.&lt;/p&gt;

&lt;h3 id=&quot;devoir-de-bob&quot;&gt;Devoir de Bob&lt;/h3&gt;

&lt;p&gt;Ce n’est pas toujours la responsabilité d’Alice.
Bob aussi a ses obligations sous ce protocole.
Y compris, au moins :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Soyez heureux.&lt;/strong&gt; 
Peut-être on trouve que c’est banal mais en fait c’est essentiel.
Si vous restez triste et dépressif, Alice sera toujours misérable quand elle parle avec vous.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Évidemment, rangez vos affaires en ordre.&lt;/strong&gt;
J’avais déjà attendu mon décès il y a plusieurs années, 
alors je me suis fait dispensable partout où je pouvais.
Pour ma famille, ce n’est pas possible.
Pour mes œuvres, biensûr, au fil des années je me suis rentré en tant qu’acteur critiqué de la communauté ZeroMQ.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Éliminez autant de stress et frais que possible.&lt;/strong&gt;
Par exemple, l’euthanasie est licite en Belgique.
J’ai déjà demandé à mon médecin de la préparer 
(pas maintenant! Quand ce moment arrive…).
Et j’ai demandé aux gens de venir me dire adieu avant je meurs, pas après.
Pas d’obsèques.
Je vais donner mon corps à la université ici, si elle veut.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Soyez réaliste.&lt;/strong&gt;
L’espoir n’est pas un médicament, comme j’ai expliqué.
Si vous allez négocier avec vos médecins, que ce soit pragmatique et à l’intérêt de tous.
J’ai dit les miens qu’ils peuvent essayer toute chimiothérapie expérimentale qu’ils souhaitent.
Ils pouvaient en obtenir des données,
et c’est la moindre récompense que je peux verser à un système qui m’a donné une extension de vie de plus que cinq ans.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Présumez le pire.&lt;/strong&gt;
Quand mon oncologue voyait mon scan, elle m’a appelée tout de suite et me disait que,
pour sa part, il s’agissait du cancer.
J’ai raccroché le téléphone et puis, je l’ai dit aux enfants.
Le lendemain j’ai dit à leurs écoles, mon avocat, et mon notaire, d’expecter le pire.
Après dix jours, les biopsies l’ont confirmé.
Ça nous a donné dix jours plus pour nous chagriner, et plus de temps à préparer.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Soyez honnête et transparent avec les autres.&lt;/strong&gt;
Il faut du temps au chagrin. 
Il est bien plus facile de traiter le décès de Bob si l’on peut en parler avec Bob.
Il n’y a aucune honte au décès, ce n’est pas un échec.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;expliquez-aux-enfants&quot;&gt;Expliquez aux enfants&lt;/h3&gt;

&lt;p&gt;Mes enfants ont 12, 9, 5 ans. Tragique, etc., etc.
Ils grandiront sans leur père. C’est une réalité.
Pourtant ils grandiront avec moi dans leur ADN, 
dans les discours de conférence interminable au Youtube,
et dans mes mots.&lt;/p&gt;

&lt;p&gt;Je leur ai déjà expliqué doucement, plusieurs fois pendant des années, comme ça:
Un jour, je serai parti. Peut-être bien loin au futur, peut-être bientôt.
Chacun va mourir, oui, mon petit Gregor, toi aussi.
C’est la vie.&lt;/p&gt;

&lt;p&gt;Imagine que tu as une boîte de Lego, et alors tu construis une maison, et tu la conserves.
Et puis tu continues à construire de nouvelles maisons sans détruire les anciennes.
Qu’est-ce qu’il va se passer?
“La boite sera vide, papa.”
Bien, oui.
Ensuite tu peux encore construire une nouvelle maison?
“Non, pas vraiment.”
Ainsi nous sommes comme les maisons de Lego.
Quand nous mourons, nous tombons en pièces qui seront rendues à la boîte.
Nous mourons, et de nouveaux bébés peuvent naître.
C’est la roue de la vie.&lt;/p&gt;

&lt;p&gt;Cependant, j’ai trouvé qu’ils se sentent bien lorsqu’ils voient leurs parents heureux et relaxé 
(pas à cause des anti-douleurs),
et quand ils disent au-revoir pendant les semaines.
Je suis si reconnaissant que je ne meurs pas brusquement, et je ne perds pas mon esprit.&lt;/p&gt;

&lt;p&gt;Et j’avais dit à mes enfants d’apprendre à nager, faire du vélo, patiner et tirer.
À cuisiner, à voyager et à camper.
À utiliser les technologies sans peur.
Gregor a joué Minecraft quand il avait 3 ans, avec le clavier dans la main gauche, et la souris dans la main droite.
Quand Noemie avait 7 ans, elle a appris à tirer avec un pistolet.
Ils peuvent parler plusieurs langues.
Ils sont confiants et peuvent apprendre rapidement, comme leur père.&lt;/p&gt;

&lt;p&gt;Toute le monde doit comprendre la signification du décès.
Accepter sa propre mortalité est une compétence-clé de l’être humain.
On s’efforce de vivre, bien sûr.
Quand c’est fini, on embrasse la fin.
Je suis heureux que je peux apprendre cette leçon à mes enfants,
une leçon que je n’ai jamais eu.&lt;/p&gt;

&lt;h3 id=&quot;euthanasie&quot;&gt;Euthanasie&lt;/h3&gt;

&lt;p&gt;Finalement, je suis si content que je n’ai jamais quitté la Belgique.
C’est un pays qui permet le décès sur demande, 
pour les malades qui sont terminaux ou ont une qualité de la vie suffisant mauvaise.
Il faut l’avis de 3 médecins, un psychiatre, 
et une période d’attendante de quatre semaines. 
Dans le premier cas, l’opinion d’un médecin suffira.&lt;/p&gt;

&lt;p&gt;Mon père l’a choisi et il est décédé le mardi de Pâques.
Plusieurs de nous étaient avec lui.
C’était un processus simple et paisible.
Il a été endormi par une première injection, en tombant dans une coma.
Et puis la deuxième a arrêté son cœur.
C’était une bonne façon de mourir, c’est ce que j’ai déjà voulu, 
bien que je ne savais pas encore que j’étais malade en ce moment.&lt;/p&gt;

&lt;p&gt;Je suis choqué que, en 2016, il y a seulement peu de pays qui la permettent,
et les autres appliquent encore les tortures barbares de la décadence et de l’échec.
C’est particulièrement pertinent pour le cancer, qui est la cause majeure du décès.
Si votre juridiction interdit l’euthanasie,
prenez le temps pour faire du lobbyisme pour la droit de mourir dans la dignité.&lt;/p&gt;

&lt;h3 id=&quot;mon-sentiment-pour-tous&quot;&gt;Mon sentiment pour tous&lt;/h3&gt;

&lt;p&gt;Je n’ai jamais été une personne craintive.&lt;/p&gt;

&lt;p&gt;Ma dernière presque-collision avec la mort m’a laissée si indifférent sur le concept entier de risque professionnel et sociale,
ainsi je suis devenu le caractère prédateur qu’Allen Ding décrit si bien.
Ça s’est calmé après la fin de notre projet “Game of Thrones”.
Je n’étais pas vraiment comme ça, 
je suis juste devenu une telle personne afin de faire fonctionner les choses étant donné les circonstances.&lt;/p&gt;

&lt;p&gt;Après avoir eu plusieurs années pour me préparer, 
et après avoir vu l’assemblage d’un grand nombre de plans délicats au cours de ces années,
me laisse profondément satisfait.
Depuis 2011 je suis devenu un tireur expert de pistolet, 
j’ai appris moi-même à jouer du piano 
(et j’ai aussi composé beaucoup de petites pièces),
j’ai vu mes enfants grandir à devenir des êtres heureuses et pétillants, 
j’ai écrit trois livres,
j’ai guidé la communauté de ZeroMQ jusqu’à un niveau d’auto-fiabilité serein.
Un Bob peut demander plus?&lt;/p&gt;

&lt;p&gt;Les membres du personnel d’ici sont aimables.
Je n’ai rien à plaindre, 
et je veux seulement exprimer ma gratitude à tous mes amis pour les années de plaisir que vous me l’avez donné, 
mes médicaments, qui m’ont gardé vivant et motivé.&lt;/p&gt;

&lt;p&gt;Merci!&lt;/p&gt;

&lt;h3 id=&quot;pensez--mes-enfants&quot;&gt;Pensez à mes enfants&lt;/h3&gt;

&lt;p&gt;Je vous en prie d’utiliser cet article pour ajouter vos histoires.
Si vous en avez ailleurs, vous pouvez aussi m’envoyer, 
copiez/collez comme un commentaire.
N’hésitez pas d’écrire en néerlandais ou français si elles sont votre langue maternelle.
J’aurais bien aimé un endroit unique où mes enfants peuvent venir et lire ce que les autres disent au sujet de leur père.&lt;/p&gt;

&lt;p&gt;Beaucoup de gens m’ait demandé mon adresse de PayPal : ph@imatix.com,
afin de faire un don au bénéfice de mes enfants.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>La petite instruction de GNU Make</title>
   <link href="http://wantingchen.github.io/programmation/2016/04/22/GNUMake.html"/>
   <updated>2016-04-22T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/programmation/2016/04/22/GNUMake</id>
   <content type="html">&lt;p&gt;Bien que je préfère utilser &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt; pour compiler mon programme, 
il reste encore important de comprendre le principe de GNU Make.&lt;/p&gt;

&lt;h3 id=&quot;lobjectif-de-gnu-make&quot;&gt;L’objectif de GNU Make&lt;/h3&gt;
&lt;p&gt;L’objectif de GNU Make est de &lt;em&gt;déterminer automatiquement quelles pièces d’un grand programme devoir être recompilées,
et spécifier les commandes pour les recompiler&lt;/em&gt;.
Le format est ainsi:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Le premier foo est la cible, et foo.c est la condition préalable.
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo.c&lt;/span&gt;
	gcc -o foo foo.c
&lt;span class=&quot;c&quot;&gt;# La recette, obligatoirement précédée par une caractère de tabulation.
&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;La cible peut être un fichier exécutable, un fichier objet, ou un label.
La condition préalable est les fichiers/répertoires nécéssaires pour compiler la cible.
La recette est la combinaison de commandes pour compiler et lier la cible.&lt;/p&gt;

&lt;p&gt;Les règles du jeu sont:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On compile tous les codes source afin de créer le fichier de cible lorsqu’il n’existe pas.&lt;/li&gt;
  &lt;li&gt;On renouvelle le fichier de cible lorsque les fichiers indiqués pas la condition préalable sont plus nouveaux que la cible.
On doit seulement recompiler les codes source actualisés et alors relier au fichier de cible.&lt;/li&gt;
  &lt;li&gt;Si les fichiers en-tête sont modifiés, il faut récompiler les codes source qui les comportent et alors relier au fichier de cible.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;le-rglage-de-variables&quot;&gt;Le réglage de variables&lt;/h3&gt;

&lt;p&gt;Il y a quatre façons pour créer ou modifier des variables.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VAR = VAL&lt;/strong&gt; : VAR devient VAL lorsque VAL est une constante; si VAL est une autre variable, VAR change aussi bien que VAL change. Par exemple:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-makefile&quot; data-lang=&quot;makefile&quot;&gt;&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; un
&lt;span class=&quot;nv&quot;&gt;VAR2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(VAR1)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# obtiendra un
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR2))&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; deux

&lt;span class=&quot;c&quot;&gt;# obtiendra deux
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR2))&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;fake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Do something&quot;&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VAR := VAL&lt;/strong&gt; : VAR devient VAL lorsque VAL est une constante; si VAL est une autre variable, VAR ne change pas si VAL change,
c’est-à-dire que la valeur de VAR n’est pas liée avec $(VAL).&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; un
&lt;span class=&quot;nv&quot;&gt;VAR2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(VAR1)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# obtenira un
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR2))&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; deux

&lt;span class=&quot;c&quot;&gt;# obtiendra un encore
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR2))&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;fake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Do something&quot;&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VAR ?= VAL&lt;/strong&gt; : VAR devient VAL lorsque VAR n’est pas encore défini, sinon VAR ne change pas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VAR += VAL&lt;/strong&gt; : on ajoute VAL à VAR.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; un

&lt;span class=&quot;c&quot;&gt;# obtiendra un
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR2))&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; deux

&lt;span class=&quot;c&quot;&gt;# obtiendra un deux
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$(warning&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(VAR1))&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;fake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Do something&quot;&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Il y a aussi plusieurs variables encastrées utiles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$@&lt;/strong&gt; : Le nom de cible&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$^&lt;/strong&gt; : tous les fichiers/dossiers dans la condition préalable&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$&amp;lt;&lt;/strong&gt; : Premièr fichiers/dossiers dans la condition préalable&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$?&lt;/strong&gt; : tous les fichiers/dossiers dans la condition préalable qui sont réactualisés&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;les-fonctions-encastres-utiles&quot;&gt;Les fonctions encastrées utiles&lt;/h3&gt;
&lt;p&gt;Ces fonctions encastrées sont souvent utilisées :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Montrer les message :
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;$(warning «Message»)&lt;/strong&gt; : Montrer le message «Message» d’avertissement avec le nombre de ligne correspondante.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;$(error «Message»)&lt;/strong&gt; : Affirmer le message «Message» d’erreur avec le numéro de ligne correspondante,
et puis terminer l’action de make.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Traitement de chaînes de caractères :
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;$(subst «from»,«to»,«text&amp;lt;&amp;gt;)&lt;/strong&gt; : si on trouve «from» dans «text», «from» sera replacé par «to».&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;$(patsubst «pattern»,«replacement»,«text»)&lt;/strong&gt; : Pour toutes les chaînes de caractères dans «text»,
s’il y a quelconque avec la forme définie comme «pattern»,
il deviendra la forme définie comme «replacement» 
(par exemple : %.c, %.o, foo.c -&amp;gt;  “foo.c” a la forme comme %.c, donc il deviendra “foo.o”).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$(shell «commande»)&lt;/strong&gt; : Commande de shell, exécuter le «commande» et montrer le résultat.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;phony&quot;&gt;.PHONY&lt;/h3&gt;

&lt;p&gt;On défine les cibles avec &lt;strong&gt;.PHONY&lt;/strong&gt; lorsqu’elles n’ont pas de condition préalable.
Normalement on l’utilise afin de définer la procédure de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;make clean&lt;/strong&gt; : 
Supprimer les fichiers creés par la procédure de la compilation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;make install&lt;/strong&gt; : 
Copier les bibliothèque ou les fichiers exécutable aux répertoires propres.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TARGET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; hello

&lt;span class=&quot;nl&quot;&gt;$(TARGET)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;$(TARGET).c&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(CC)&lt;/span&gt; -o &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$^&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	rm -f &lt;span class=&quot;nv&quot;&gt;$(TARGET)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;rfrences&quot;&gt;Références&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jeff71321.pixnet.net/blog/post/92143030-makefile%E6%95%99%E5%AD%B8%28%E4%B8%80%29&quot;&gt;makefile教學(一)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://fr.slideshare.net/zzz00072/gnu-make-autotools-cmake&quot;&gt;GNU Make, Autotools, CMake 簡介&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://wiki.ubuntu.org.cn/index.php?title=%E8%B7%9F%E6%88%91%E4%B8%80%E8%B5%B7%E5%86%99Makefile:%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0&amp;amp;variant=zh-tw&quot;&gt;跟我一起寫Makefile:使用函數&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>La fonction de Hachage (Hash) et Chiffrement (Encryption)</title>
   <link href="http://wantingchen.github.io/information/2016/04/21/Hash_Encrypt.html"/>
   <updated>2016-04-21T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/information/2016/04/21/Hash_Encrypt</id>
   <content type="html">&lt;h3 id=&quot;la-diffrence-entre-fonction-de-hachage-hash-et-chiffrement-encryption&quot;&gt;La différence entre fonction de Hachage (Hash) et Chiffrement (Encryption)&lt;/h3&gt;

&lt;p&gt;D’abord, il faut qu’on explique les deux brièvement.&lt;/p&gt;

&lt;p&gt;En général, une fonction de Hachage convertit “irréversiblement” les données de tailles arbitraires aux données de tailles fixes.
De l’autre côté, il y a le Chiffrement, qui convertit les données dans une autre forme, 
tout en permettant de retrouver les données originales avec la clé de chiffrement correspondante.&lt;/p&gt;

&lt;p&gt;Concrètement,  il y a deux différences majeures:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Normalement, les tailles des données converties par une certaine fonction de Hachage ne changent jamais.&lt;/strong&gt; 
Mais celles obtenues par Chiffrement sont souvent (pas toujours) proportionnelles aux tailles des données originales.
Par exemple, si on utilise la fontion de Hachage encastré de Python pour convertir les deux chaînes de caractères, “Microsoft” et “Google”:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;467753631682903773&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Google&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;201064995106876445&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Les tailles de résultats sont les mêmes. Mais, si on utilise l’implémentation de RSA &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newkeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x97\xf3\xae\xf5\xea\xb5\xb9&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;;0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1xCW&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd0\xca\xd8\x07&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9c\n\x88\x96&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Zo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9d\x90\xe3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xb7\xd2\xbd&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xad&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x15\xac&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\x95\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xdf\xfe\xd2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tA&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa8\x8f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xee\x1e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Google&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1b\xe4&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x82&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XU&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xcc\xbd\x08&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xfb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd8\x19&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf1\x18\xd1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87\xbe\xc0\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe9\x10\x91&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86\xc6&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd7&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\xb5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n2&#39;v&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xeb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J~&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x14\xca\x8e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x83&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Un algorithme de Hachage est irréversible. Au contraire, celui de Chiffrement est réversible.&lt;/strong&gt;
C’est-à-dire qu’il n’existe pas de façon de reconvertir les résultats générés par une fonction de hachage aux chaînes de caractères originales,
pourtant on peut déchiffrer les codes avec la clé de Chiffrement correspondante.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1b\xe4&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x82&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XU&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xcc\xbd\x08&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xfb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd8\x19&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf1\x18\xd1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87\xbe\xc0\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe9\x10\x91&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86\xc6&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd7&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\xb5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n2&#39;v&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xeb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J~&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x14\xca\x8e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x83&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Google&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x97\xf3\xae\xf5\xea\xb5\xb9&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;;0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1xCW&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd0\xca\xd8\x07&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9c\n\x88\x96&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Zo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9d\x90\xe3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xb7\xd2\xbd&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xad&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x15\xac&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\x95\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xdf\xfe\xd2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tA&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa8\x8f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xee\x1e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Microsoft&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Pourquoi? 
Parce qu’une certaine chaîne de caractères ne peut avoir qu’un seul mapping à une autre 
chaîne de caractères, étant donné l’algorithme et la clé
(ça signifie : seul à seul).
Mais il est possible de trouver plusieurs chaînes de caractères qui peuvent convertir a un même résultat avec une certaine fountion de Hachage
(Dans cette situation, on appelle ces chaînes de caractères ont la “collision”).&lt;/p&gt;

&lt;h3 id=&quot;conception-diffrente&quot;&gt;Conception différente&lt;/h3&gt;

&lt;p&gt;Pour une bonne fonction de Hachage, les conditions ci-dessous doivent être satisfaites :&lt;br /&gt;
- &lt;strong&gt;Il est difficile de trouver quelconque collision.&lt;/strong&gt; 
Si on utilise une fonction de Hachage pour convertir un certain mot-de-passe, 
on peut simplement essayer une énorme quantité de chaînes de caractères afin de obtenir le même résultat,
et alors on peut passer!&lt;br /&gt;
- &lt;strong&gt;Elle est sensible aux petites différences.&lt;/strong&gt;
Si un caractère d’une chaîne avec 10000-bytes longueur est modifié, le résultat devra changer complétement.&lt;/p&gt;

&lt;p&gt;Et une fonction de Chiffrement fiable doit avoir la propriété de “fonction à sens unique avec trappe”:&lt;br /&gt;
- &lt;strong&gt;Faible coût de calcul de chiffrement. Faible coût de calcul de déchiffrement, à condition de posséder la clé.&lt;/strong&gt;&lt;br /&gt;
- &lt;strong&gt;Si on n’a pas la clé, il sera extrêmement difficile de trouver l’original même si on sait l’algorithme.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;rfrence&quot;&gt;Référence&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/leoo2sk/archive/2010/10/01/hash-and-encrypt.html&quot;&gt;哈希(Hash)与加密(Encrypt)的基本原理、区别及工程应用 (en chinois)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commentaire&quot;&gt;Commentaire&lt;/h3&gt;

&lt;p&gt;et plus généralement pour échanger des données confidentielles sur Internet.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Le chiffrement RSA est un algorithme de cryptographie asymétrique, très utilisé dans le commerce électronique, &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Construire un quadrirotor avec Raspberry Pi (1)</title>
   <link href="http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/04/12/Drone_1.html"/>
   <updated>2016-04-12T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/04/12/Drone_1</id>
   <content type="html">&lt;p&gt;Bien qu’il y a déjà plusieurs réalisations de drones propulsés par Raspberry Pi &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;,
je me suis défié à en assembler un moi-même, et cet apprentissage fort utile est rapporté ci-dessous.&lt;/p&gt;

&lt;p&gt;Contrairement aux autres, le drone que je veux construire a les spécialités suivantes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tous les capteurs/modules sont connectés directement avec Raspberry Pi, aucun autre microprocesseur est utilisé.&lt;/li&gt;
  &lt;li&gt;Le contrôle / l’asservissement du drone est fait par Arduino.&lt;/li&gt;
  &lt;li&gt;L’utilisation de &lt;a href=&quot;http://www.airspayce.com/mikem/bcm2835/&quot;&gt;bcm2835 bibliothèque&lt;/a&gt; 
au lieu d’autres bibliothèques, afin d’éviter l’utilisation des pilotes I2C.
Ça me donne l’opportunité d’essayer &lt;a href=&quot;https://xenomai.org/&quot;&gt;Xenomai&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;La communication entre le contrôleur et le drone est réalisée par des modules RF. 
Et le drone peut arrêter automatiquement quand la communication est vraiment perdue.&lt;/li&gt;
  &lt;li&gt;Si nécessaire, le noyau Preempt RT ou Xenomai peut être adapté afin de réguler la fréquence.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selon les spécifications, on doit préparer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;10 DOF IMU：GY80(I2C，400kHz，le temps de rafraîchissement peut atteindre 1600Hz). 
Mais j’ai trouvé que le baromètre (Bosch BMP085) n’est pas assez précis (0.03hPa / 0.25m résolution).
MS5611 est ajouté afin d’augmenter la précision.&lt;/li&gt;
  &lt;li&gt;nRF24L01*2：modules RF(250Kbps-2Mbps，la bande passante varie avec la distance, SPI), un pour RPi, un pour Arduino.&lt;/li&gt;
  &lt;li&gt;ADC：MCP3008, 10bit(afin de mesurer la tension de la batterie)，SPI.&lt;/li&gt;
  &lt;li&gt;PWM：PCA9685 (on peut acheter à &lt;a href=&quot;(https://www.adafruit.com/product/815)&quot;&gt;Adafruit&lt;/a&gt;)，I2C，12bit，la fréquence maximum est 1526Hz.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00T6ANWUU/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;ZOP Power 11.1V 5500mAh 3S1P 35C Lipo Battery For RC Model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00RWH7CA0/ref=oh_aui_detailpage_o03_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;HOSdog 30A 4 en 1 Brushless Speed Contrôleur ESC pour RC Quadcopter Multicopter (Noir)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00CCXN4HO/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;JMT F450 Air multi-Rotor Frame FlameWheel KIT 450F comme DJI pour KK MWC MK 4 axe RC Quadcopter Multicopter UFO Heli&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00L8H95AU/ref=oh_aui_detailpage_o08_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Andoer 4 A2212/13T 1000KV Brushless Motor + 2 paires 1045 10 * 4.5 Hélices pour DJI F450 F550 MWC Multicopter (2212 1000KV Brushless Motor, 1045 10 * 4.5 Hélices, DJI F450 F550 partie)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici le schéma du système &lt;img src=&quot;/public/imgs/Sheme_drone.jpg&quot; alt=&quot;gras&quot; /&gt; &lt;/p&gt;
&lt;p&gt;Ensuite, on y va!&lt;/p&gt;

&lt;h4 id=&quot;rfrence&quot;&gt;Référence:&lt;/h4&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.botched.co.uk/&quot;&gt;Botched&lt;/a&gt;, 
  &lt;a href=&quot;http://www.instructables.com/id/The-Drone-Pi/&quot;&gt;The Drone Pi&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/idavidstory/goPiCopter&quot;&gt;goPiCopter&lt;/a&gt;, 
  &lt;a href=&quot;http://blog.pistuffing.co.uk/&quot;&gt;PiStuffing&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/vjaunet/QUADCOPTER_V2&quot;&gt;QUADCOPTER&lt;/a&gt;, 
  &lt;a href=&quot;https://github.com/gregd72002/AvrMiniCopter-wiki/wiki&quot;&gt;AvrMiniCopter&lt;/a&gt;,
  &lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?f=37&amp;amp;t=35746&quot;&gt;PiCopter&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
